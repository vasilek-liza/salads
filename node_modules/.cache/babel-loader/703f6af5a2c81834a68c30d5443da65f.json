{"ast":null,"code":"import Axios from \"axios\";\nexport class BaseAPI {\n  constructor() {\n    var _this = this;\n\n    this.getMethod = url => {\n      return this.instance.get(url).then(response => response).catch(err => err);\n    };\n\n    this.postMethod = function () {\n      return _this.instance.post(...arguments).then(response => response).catch(err => err);\n    };\n\n    this.instance = Axios.create({\n      baseURL: BaseAPI.baseURL,\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n  }\n\n}\nBaseAPI.baseURL = \"http://test-job.webatom.ru\";","map":{"version":3,"sources":["/Users/elizaveta/Desktop/Develop/src/api/BaseAPI.js"],"names":["Axios","BaseAPI","constructor","getMethod","url","instance","get","then","response","catch","err","postMethod","post","create","baseURL","headers"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,OAAN,CAAc;AAGjBC,EAAAA,WAAW,GAAG;AAAA;;AAAA,SASdC,SATc,GASDC,GAAD,IAAS;AACjB,aAAO,KAAKC,QAAL,CACFC,GADE,CACEF,GADF,EAEFG,IAFE,CAEIC,QAAD,IAAcA,QAFjB,EAGFC,KAHE,CAGKC,GAAD,IAASA,GAHb,CAAP;AAIH,KAda;;AAAA,SAgBdC,UAhBc,GAgBD,YAAa;AACtB,aAAO,KAAI,CAACN,QAAL,CACFO,IADE,CACG,YADH,EAEFL,IAFE,CAEIC,QAAD,IAAcA,QAFjB,EAGFC,KAHE,CAGKC,GAAD,IAASA,GAHb,CAAP;AAIH,KArBa;;AACV,SAAKL,QAAL,GAAgBL,KAAK,CAACa,MAAN,CAAa;AACzBC,MAAAA,OAAO,EAAEb,OAAO,CAACa,OADQ;AAEzBC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AAFgB,KAAb,CAAhB;AAMH;;AAVgB;AAARd,O,CACFa,O,GAAU,4B","sourcesContent":["import Axios from \"axios\";\n\nexport class BaseAPI {\n    static baseURL = \"http://test-job.webatom.ru\";\n\n    constructor() {\n        this.instance = Axios.create({\n            baseURL: BaseAPI.baseURL,\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n        });\n    }\n\n    getMethod = (url) => {\n        return this.instance\n            .get(url)\n            .then((response) => response)\n            .catch((err) => err);\n    };\n\n    postMethod = (...args) => {\n        return this.instance\n            .post(...args)\n            .then((response) => response)\n            .catch((err) => err);\n    };\n}\n"]},"metadata":{},"sourceType":"module"}