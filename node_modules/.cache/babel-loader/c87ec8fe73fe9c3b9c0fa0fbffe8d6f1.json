{"ast":null,"code":"var _jsxFileName = \"/Users/elizaveta/Desktop/Develop/src/components/common/NavigationMenu.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { resources } from \"../../resources\";\nimport { routers } from \"../../routers\";\nimport { ModalButtons } from \"./ModalButtons/ModalButtons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function NavigationMenu(props) {\n  _s();\n\n  const [buttons, setButtons] = useState([]);\n  const history = useHistory();\n\n  const goToOrder = () => history.push(routers.order.path);\n\n  const goToMolecules = () => history.push(routers.molecules.path);\n\n  const goTosalads = () => history.push(routers.salads.path);\n\n  useEffect(() => {\n    const buttons = [];\n    if (props.order) buttons.push({\n      onClick: goToOrder,\n      text: resources.Orders\n    });\n    if (props.salads) buttons.push({\n      onClick: goTosalads,\n      text: resources.ReadySalads\n    });\n    if (props.molecules) buttons.push({\n      onClick: goToMolecules,\n      text: resources.Recipe\n    });\n    setButtons(buttons);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ModalButtons, {\n    title: resources.Menu,\n    buttons: buttons\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 12\n  }, this);\n}\n\n_s(NavigationMenu, \"QG/V84OhgUprnQDgjrkgF/6Ding=\", false, function () {\n  return [useHistory];\n});\n\n_c = NavigationMenu;\n\nvar _c;\n\n$RefreshReg$(_c, \"NavigationMenu\");","map":{"version":3,"sources":["/Users/elizaveta/Desktop/Develop/src/components/common/NavigationMenu.jsx"],"names":["React","useState","useEffect","useHistory","resources","routers","ModalButtons","NavigationMenu","props","buttons","setButtons","history","goToOrder","push","order","path","goToMolecules","molecules","goTosalads","salads","onClick","text","Orders","ReadySalads","Recipe","Menu"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,SAASC,OAAT,QAAwB,eAAxB;AACA,SAASC,YAAT,QAA6B,6BAA7B;;AAEA,OAAO,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAAA;;AAClC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAMU,OAAO,GAAGR,UAAU,EAA1B;;AAEA,QAAMS,SAAS,GAAG,MAAMD,OAAO,CAACE,IAAR,CAAaR,OAAO,CAACS,KAAR,CAAcC,IAA3B,CAAxB;;AACA,QAAMC,aAAa,GAAG,MAAML,OAAO,CAACE,IAAR,CAAaR,OAAO,CAACY,SAAR,CAAkBF,IAA/B,CAA5B;;AACA,QAAMG,UAAU,GAAG,MAAMP,OAAO,CAACE,IAAR,CAAaR,OAAO,CAACc,MAAR,CAAeJ,IAA5B,CAAzB;;AAEAb,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMO,OAAO,GAAG,EAAhB;AAEA,QAAID,KAAK,CAACM,KAAV,EAAiBL,OAAO,CAACI,IAAR,CAAa;AAAEO,MAAAA,OAAO,EAAER,SAAX;AAAsBS,MAAAA,IAAI,EAAEjB,SAAS,CAACkB;AAAtC,KAAb;AACjB,QAAId,KAAK,CAACW,MAAV,EAAkBV,OAAO,CAACI,IAAR,CAAa;AAAEO,MAAAA,OAAO,EAAEF,UAAX;AAAuBG,MAAAA,IAAI,EAAEjB,SAAS,CAACmB;AAAvC,KAAb;AAClB,QAAIf,KAAK,CAACS,SAAV,EAAqBR,OAAO,CAACI,IAAR,CAAa;AAAEO,MAAAA,OAAO,EAAEJ,aAAX;AAA0BK,MAAAA,IAAI,EAAEjB,SAAS,CAACoB;AAA1C,KAAb;AAErBd,IAAAA,UAAU,CAACD,OAAD,CAAV;AACH,GARQ,EAQN,EARM,CAAT;AAUA,sBAAO,QAAC,YAAD;AAAc,IAAA,KAAK,EAAEL,SAAS,CAACqB,IAA/B;AAAqC,IAAA,OAAO,EAAEhB;AAA9C;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;;GAnBeF,c;UAEIJ,U;;;KAFJI,c","sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { resources } from \"../../resources\";\nimport { routers } from \"../../routers\";\nimport { ModalButtons } from \"./ModalButtons/ModalButtons\";\n\nexport function NavigationMenu(props) {\n    const [buttons, setButtons] = useState([]);\n    const history = useHistory();\n\n    const goToOrder = () => history.push(routers.order.path);\n    const goToMolecules = () => history.push(routers.molecules.path);\n    const goTosalads = () => history.push(routers.salads.path);\n\n    useEffect(() => {\n        const buttons = [];\n\n        if (props.order) buttons.push({ onClick: goToOrder, text: resources.Orders });\n        if (props.salads) buttons.push({ onClick: goTosalads, text: resources.ReadySalads });\n        if (props.molecules) buttons.push({ onClick: goToMolecules, text: resources.Recipe });\n\n        setButtons(buttons);\n    }, []);\n\n    return <ModalButtons title={resources.Menu} buttons={buttons} />;\n}\n"]},"metadata":{},"sourceType":"module"}