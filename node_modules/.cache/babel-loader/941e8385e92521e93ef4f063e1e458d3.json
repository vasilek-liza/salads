{"ast":null,"code":"import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { moleculeAPI } from \"../../../api/MoleculeAPI\";\nexport const fetchMolecules = createAsyncThunk(\"fetchMolecules\", async (_, thunkAPI) => {\n  try {\n    const response = await moleculeAPI.getMolecules();\n    return response.data;\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e.message);\n  }\n});\nexport const fetchMolecule = createAsyncThunk(\"fetchMolecule\", async (id, thunkAPI) => {\n  try {\n    const response = await moleculeAPI.getMolecule(id);\n    return response.data;\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e.message);\n  }\n});","map":{"version":3,"sources":["/Users/elizaveta/Desktop/Develop/src/store/reducers/Molecule/MoleculeThunks.js"],"names":["createAsyncThunk","moleculeAPI","fetchMolecules","_","thunkAPI","response","getMolecules","data","e","rejectWithValue","message","fetchMolecule","id","getMolecule"],"mappings":"AAAA,SAASA,gBAAT,QAAiC,kBAAjC;AACA,SAASC,WAAT,QAA4B,0BAA5B;AAEA,OAAO,MAAMC,cAAc,GAAGF,gBAAgB,CAAC,gBAAD,EAAmB,OAAOG,CAAP,EAAUC,QAAV,KAAuB;AACpF,MAAI;AACA,UAAMC,QAAQ,GAAG,MAAMJ,WAAW,CAACK,YAAZ,EAAvB;AACA,WAAOD,QAAQ,CAACE,IAAhB;AACH,GAHD,CAGE,OAAOC,CAAP,EAAU;AACR,WAAOJ,QAAQ,CAACK,eAAT,CAAyBD,CAAC,CAACE,OAA3B,CAAP;AACH;AACJ,CAP6C,CAAvC;AASP,OAAO,MAAMC,aAAa,GAAGX,gBAAgB,CAAC,eAAD,EAAkB,OAAOY,EAAP,EAAWR,QAAX,KAAwB;AACnF,MAAI;AACA,UAAMC,QAAQ,GAAG,MAAMJ,WAAW,CAACY,WAAZ,CAAwBD,EAAxB,CAAvB;AACA,WAAOP,QAAQ,CAACE,IAAhB;AACH,GAHD,CAGE,OAAOC,CAAP,EAAU;AACR,WAAOJ,QAAQ,CAACK,eAAT,CAAyBD,CAAC,CAACE,OAA3B,CAAP;AACH;AACJ,CAP4C,CAAtC","sourcesContent":["import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { moleculeAPI } from \"../../../api/MoleculeAPI\";\n\nexport const fetchMolecules = createAsyncThunk(\"fetchMolecules\", async (_, thunkAPI) => {\n    try {\n        const response = await moleculeAPI.getMolecules();\n        return response.data;\n    } catch (e) {\n        return thunkAPI.rejectWithValue(e.message);\n    }\n});\n\nexport const fetchMolecule = createAsyncThunk(\"fetchMolecule\", async (id, thunkAPI) => {\n    try {\n        const response = await moleculeAPI.getMolecule(id);\n        return response.data;\n    } catch (e) {\n        return thunkAPI.rejectWithValue(e.message);\n    }\n});\n"]},"metadata":{},"sourceType":"module"}