{"ast":null,"code":"var _jsxFileName = \"/Users/elizaveta/Desktop/Develop/src/components/Molecules.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { BasicTitle } from \"./common/BasicTitle\";\nimport { resources } from \"../resources\";\nimport { BasicListCards } from \"./common/BasicListCards\";\nimport { NavigationMenu } from \"./common/NavigationMenu\";\nimport { ModalButtons } from \"./common/ModalButtons\";\nimport BasicListItems from \"./common/BasicListItems\";\nimport { useHistory } from \"react-router-dom\";\nimport { routers } from \"../routers\";\nimport { createClone, pushReverse, resetClone, resetReverse, updateClone } from \"../store/reducers/Molecule/MoleculeSlice\";\nimport { addNewSalad } from \"../store/reducers/App/AppThunks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Molecules() {\n  _s();\n\n  const {\n    molecules,\n    cloneMolecules,\n    reserve\n  } = useSelector(state => state.moleculeReducer);\n  const [modalItems] = useState({\n    setOpen: null\n  });\n  const [modalRedirect] = useState({\n    setOpen: null\n  });\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    dispatch(createClone());\n  }, [molecules]);\n  useEffect(() => {\n    return () => {\n      dispatch(resetClone());\n      dispatch(resetReverse());\n    };\n  }, []);\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const onClickListButton = name => {\n    if (reserve.length) {\n      if (!name) {\n        setError(true);\n      } else {\n        dispatch(addNewSalad(name));\n        modalItems.setOpen(false);\n        modalRedirect.setOpen(true);\n      }\n    }\n  };\n\n  const closeModalRedirect = () => {\n    modalRedirect.setOpen(false);\n  };\n\n  const goToSalads = () => history.push(routers.salads.path);\n\n  const addMolecule = element => {\n    dispatch(pushReverse(element));\n    dispatch(updateClone(element));\n  };\n\n  const onCloseModalItems = () => {\n    dispatch(resetClone());\n    dispatch(resetReverse());\n    dispatch(createClone());\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavigationMenu, {\n      order: true,\n      salads: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(BasicTitle, {\n      text: resources.Molecule\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ModalButtons, {\n      buttons: [],\n      title: resources.AddSalad,\n      handler: setOpen => modalItems.setOpen = setOpen,\n      onClose: onCloseModalItems,\n      children: /*#__PURE__*/_jsxDEV(BasicListItems, {\n        form: true,\n        list: cloneMolecules,\n        name: resources.NameSalad,\n        buttonItem: {\n          onClick: addMolecule,\n          text: resources.Add\n        },\n        buttonList: {\n          onClick: onClickListButton,\n          text: resources.CreateSalad\n        },\n        error: error,\n        errorText: resources.RequriredField\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ModalButtons, {\n      buttons: [{\n        onClick: closeModalRedirect,\n        text: resources.Stay\n      }, {\n        onClick: goToSalads,\n        text: resources.MoveToSalad\n      }],\n      text: \"\",\n      handler: setOpen => modalRedirect.setOpen = setOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), !molecules.length ? /*#__PURE__*/_jsxDEV(BasicTitle, {\n      text: resources.NoMolecules,\n      center: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 34\n    }, this) : /*#__PURE__*/_jsxDEV(BasicListCards, {\n      list: molecules,\n      width: 300,\n      hiddenCount: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 87\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Molecules, \"iMTH6iT9reiWh+6qrvKXtFTKKiI=\", false, function () {\n  return [useSelector, useDispatch, useHistory];\n});\n\n_c = Molecules;\n\nvar _c;\n\n$RefreshReg$(_c, \"Molecules\");","map":{"version":3,"sources":["/Users/elizaveta/Desktop/Develop/src/components/Molecules.jsx"],"names":["React","useEffect","useState","useDispatch","useSelector","BasicTitle","resources","BasicListCards","NavigationMenu","ModalButtons","BasicListItems","useHistory","routers","createClone","pushReverse","resetClone","resetReverse","updateClone","addNewSalad","Molecules","molecules","cloneMolecules","reserve","state","moleculeReducer","modalItems","setOpen","modalRedirect","error","setError","dispatch","history","onClickListButton","name","length","closeModalRedirect","goToSalads","push","salads","path","addMolecule","element","onCloseModalItems","Molecule","AddSalad","NameSalad","onClick","text","Add","CreateSalad","RequriredField","Stay","MoveToSalad","NoMolecules"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { BasicTitle } from \"./common/BasicTitle\";\nimport { resources } from \"../resources\";\nimport { BasicListCards } from \"./common/BasicListCards\";\nimport { NavigationMenu } from \"./common/NavigationMenu\";\nimport { ModalButtons } from \"./common/ModalButtons\";\nimport BasicListItems from \"./common/BasicListItems\";\nimport { useHistory } from \"react-router-dom\";\nimport { routers } from \"../routers\";\nimport { createClone, pushReverse, resetClone, resetReverse, updateClone } from \"../store/reducers/Molecule/MoleculeSlice\";\nimport { addNewSalad } from \"../store/reducers/App/AppThunks\";\n\nexport default function Molecules() {\n    const { molecules, cloneMolecules, reserve } = useSelector((state) => state.moleculeReducer);\n    const [modalItems] = useState({ setOpen: null });\n    const [modalRedirect] = useState({ setOpen: null });\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        dispatch(createClone());\n    }, [molecules]);\n\n    useEffect(() => {\n        return () => {\n            dispatch(resetClone());\n            dispatch(resetReverse());\n        };\n    }, []);\n\n    const dispatch = useDispatch();\n    const history = useHistory();\n\n    const onClickListButton = (name) => {\n        if (reserve.length) {\n            if (!name) {\n                setError(true);\n            } else {\n                dispatch(addNewSalad(name));\n                modalItems.setOpen(false);\n                modalRedirect.setOpen(true);\n            }\n        }\n    };\n\n    const closeModalRedirect = () => {\n        modalRedirect.setOpen(false);\n    };\n\n    const goToSalads = () => history.push(routers.salads.path);\n\n    const addMolecule = (element) => {\n        dispatch(pushReverse(element));\n        dispatch(updateClone(element));\n    };\n\n    const onCloseModalItems = () => {\n        dispatch(resetClone());\n        dispatch(resetReverse());\n        dispatch(createClone());\n    };\n\n    return (\n        <>\n            <NavigationMenu order salads />\n\n            <BasicTitle text={resources.Molecule} />\n\n            <ModalButtons buttons={[]} title={resources.AddSalad} handler={(setOpen) => (modalItems.setOpen = setOpen)} onClose={onCloseModalItems}>\n                <BasicListItems\n                    form\n                    list={cloneMolecules}\n                    name={resources.NameSalad}\n                    buttonItem={{ onClick: addMolecule, text: resources.Add }}\n                    buttonList={{ onClick: onClickListButton, text: resources.CreateSalad }}\n                    error={error}\n                    errorText={resources.RequriredField}\n                />\n            </ModalButtons>\n\n            <ModalButtons\n                buttons={[\n                    { onClick: closeModalRedirect, text: resources.Stay },\n                    { onClick: goToSalads, text: resources.MoveToSalad },\n                ]}\n                text={\"\"}\n                handler={(setOpen) => (modalRedirect.setOpen = setOpen)}\n            />\n\n            {!molecules.length ? <BasicTitle text={resources.NoMolecules} center /> : <BasicListCards list={molecules} width={300} hiddenCount />}\n        </>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}