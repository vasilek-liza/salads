{"ast":null,"code":"var _jsxFileName = \"/Users/elizaveta/Desktop/Develop/src/components/Order.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { BasicTitle } from \"./common/BasicTitle\";\nimport { BasicListCards } from \"./common/BasicListCards\";\nimport { NavigationMenu } from \"./common/NavigationMenu\";\nimport { resources } from \"../resources\";\nimport { useHistory } from \"react-router-dom\";\nimport { routers } from \"../routers\";\nimport { Button } from \"@mui/material\";\nimport { postOrder } from \"../store/reducers/Order/OrderThunks\";\nimport { FlexContainer } from \"./common/FlexContainer\";\nimport { ModalButtons } from \"./common/ModalButtons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Order() {\n  _s();\n\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const [modal] = useState({\n    setOpen: null\n  });\n  const [responseText, setResponseText] = useState(\"\");\n  const {\n    salads,\n    order\n  } = useSelector(state => state.orderReducer);\n\n  const goToMeleculId = element => history.push(routers.salads.path + \"/\" + element._id);\n\n  const completeOrder = async () => {\n    try {\n      const response = await dispatch(postOrder(order));\n\n      if (response && response.payload.success) {\n        setResponseText(resources.OrderCompleted);\n        modal.setOpen(true);\n      } else {\n        throw new Error();\n      }\n    } catch (error) {\n      setResponseText(resources.SomethingWentWrong);\n      modal.setOpen(true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavigationMenu, {\n      salads: true,\n      molecules: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(BasicTitle, {\n      text: resources.Orders\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), !salads.length ? /*#__PURE__*/_jsxDEV(BasicTitle, {\n      text: resources.NoSalad,\n      center: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(FlexContainer, {\n        center: true,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: completeOrder,\n          children: resources.CompleteOrder\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(BasicListCards, {\n        list: salads,\n        width: 300,\n        buttons: [{\n          onClick: goToMeleculId,\n          text: resources.More\n        }]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(ModalButtons, {\n      buttons: [],\n      text: \"\",\n      handler: setOpen => modal.setOpen = setOpen,\n      children: /*#__PURE__*/_jsxDEV(FlexContainer, {\n        center: true,\n        children: responseText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Order, \"2EpN/P7uvtCZFKgTiQAwjOkKzwo=\", false, function () {\n  return [useHistory, useDispatch, useSelector];\n});\n\n_c = Order;\n\nvar _c;\n\n$RefreshReg$(_c, \"Order\");","map":{"version":3,"sources":["/Users/elizaveta/Desktop/Develop/src/components/Order.jsx"],"names":["React","useState","useDispatch","useSelector","BasicTitle","BasicListCards","NavigationMenu","resources","useHistory","routers","Button","postOrder","FlexContainer","ModalButtons","Order","history","dispatch","modal","setOpen","responseText","setResponseText","salads","order","state","orderReducer","goToMeleculId","element","push","path","_id","completeOrder","response","payload","success","OrderCompleted","Error","error","SomethingWentWrong","Orders","length","NoSalad","CompleteOrder","onClick","text","More"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { BasicTitle } from \"./common/BasicTitle\";\nimport { BasicListCards } from \"./common/BasicListCards\";\nimport { NavigationMenu } from \"./common/NavigationMenu\";\nimport { resources } from \"../resources\";\nimport { useHistory } from \"react-router-dom\";\nimport { routers } from \"../routers\";\nimport { Button } from \"@mui/material\";\nimport { postOrder } from \"../store/reducers/Order/OrderThunks\";\nimport { FlexContainer } from \"./common/FlexContainer\";\nimport { ModalButtons } from \"./common/ModalButtons\";\n\nexport default function Order() {\n    const history = useHistory();\n    const dispatch = useDispatch();\n\n    const [modal] = useState({ setOpen: null });\n    const [responseText, setResponseText] = useState(\"\");\n\n    const { salads, order } = useSelector((state) => state.orderReducer);\n\n    const goToMeleculId = (element) => history.push(routers.salads.path + \"/\" + element._id);\n\n    const completeOrder = async () => {\n        try {\n            const response = await dispatch(postOrder(order));\n            if (response && response.payload.success) {\n                setResponseText(resources.OrderCompleted);\n                modal.setOpen(true);\n            } else {\n                throw new Error();\n            }\n        } catch (error) {\n            setResponseText(resources.SomethingWentWrong);\n            modal.setOpen(true);\n        }\n    };\n\n    return (\n        <>\n            <NavigationMenu salads molecules />\n\n            <BasicTitle text={resources.Orders} />\n\n            {!salads.length ? (\n                <BasicTitle text={resources.NoSalad} center />\n            ) : (\n                <>\n                    <FlexContainer center>\n                        <Button onClick={completeOrder}>{resources.CompleteOrder}</Button>\n                    </FlexContainer>\n\n                    <BasicListCards list={salads} width={300} buttons={[{ onClick: goToMeleculId, text: resources.More }]} />\n                </>\n            )}\n\n            <ModalButtons buttons={[]} text={\"\"} handler={(setOpen) => (modal.setOpen = setOpen)}>\n                <FlexContainer center>{responseText}</FlexContainer>\n            </ModalButtons>\n        </>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}